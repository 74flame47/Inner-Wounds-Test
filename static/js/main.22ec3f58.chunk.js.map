{"version":3,"sources":["images/site_.png","images/home.png","images/home-copy.png","images/bill-board2.png","images/-point.png","images/img2.png","images/img3.png","images/animation_2-.gif","images/animation_1.gif","images/animation_2.gif","images/animation_3.gif","images/animation_4.gif","images/done.gif","images/tree_.png","images/vid_placeholder.png","images/img0.png","images/logo_.png","images/dsa.PNG","images/animation_6.gif","components/home.js","components/welcome.js","components/whatWeDo.js","components/portfolio.js","components/getConnected.js","components/nav.js","components/popUpDefault.js","displayFrame.js","serviceWorker.js","index.js"],"names":["module","exports","ContentContainer","useState","useEffect","pagefade","useSpring","from","opacity","transition","backgroundImage","MainImg","backgroundPosition","backgroundSize","backgroundRepeat","to","div","className","style","src","CopyImg","alt","Welcome","backgroundColor","BBoard","PPoint","width","maxWidth","margin","WhatWeDo","database","animation","copy","tiles","Animation0","Animation1","Animation2","Animation3","Animation4","Animation5","illustration","Img2","Img3","webDevelopment","Site","activeSkill","setActiveSkill","activeTile","setActiveTile","setCopy","setTiles","setBgImg","browserSize","window","innerWidth","onClick","color","map","tile","i","key","border","num","console","log","img","position","left","top","transform","right","Portfolio","popUpToggle","showVideo","url","height","controls","videos","display","boxSizing","cursor","videosStyles","websites","websitesStyles","MovingLogoDisplay","video","VidPlaceholder","websiteDisplay","site","SiteImg","TreeImg","zIndex","bottom","GetConnected","id","placeholder","Img0","Home","homeColor","setHomeColor","welcome","setwelcome","whatWeDoColor","setWhatWeDoColor","portfolioColor","setPortfolioColor","getConnectedColor","setGetConnectedColor","hometrigged","PopUpDefault","popUpContent","DisplayFrame","newView","setNewView","playing","videoIntro","setVideoIntro","objectFit","objectPosition","videoIntroStyle","setVideoIntroStyle","logoP","logoStyle","setLogoStyle","popUp","setPopUp","setPopUpContent","fade","a","logoToggle","prevState","positon","logoMain","path","component","render","onEnded","type","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.22ec3f58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/site_.d1c0771a.png\";","module.exports = __webpack_public_path__ + \"static/media/home.b6b2035d.png\";","module.exports = __webpack_public_path__ + \"static/media/home-copy.df7a76f7.png\";","module.exports = __webpack_public_path__ + \"static/media/bill-board2.8164c306.png\";","module.exports = __webpack_public_path__ + \"static/media/-point.f33b65b3.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.066f1f78.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.b99956d0.png\";","module.exports = __webpack_public_path__ + \"static/media/animation_2-.c74ea7c7.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation_1.66e249f9.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation_2.af15b9c6.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation_3.acd4e4f9.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation_4.201ffa79.gif\";","module.exports = __webpack_public_path__ + \"static/media/done.3cc669b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/tree_.6a3f0114.png\";","module.exports = __webpack_public_path__ + \"static/media/vid_placeholder.cdbeb883.png\";","module.exports = __webpack_public_path__ + \"static/media/img0.a324665f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_.a99c3da9.png\";","module.exports = __webpack_public_path__ + \"static/media/dsa.3e00eee9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/animation_6.d4a5df91.gif\";","import React, { useState, useEffect } from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport MainImg from '../images/home.png'\r\nimport CopyImg from '../images/home-copy.png'\r\nimport '../css/home.css';\r\n\r\nconst ContentContainer = () => {\r\n const [siteTest , setSiteTest] = useState(true);\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        \r\n        \r\n    }, [])\r\n\r\n\r\n    const pagefade = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            transition: '.5s',\r\n            backgroundImage: `url(${MainImg})`,\r\n            backgroundPosition: \"right\",\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        },\r\n        to: {\r\n            opacity: 1\r\n        }\r\n    })\r\n\r\n    return( <animated.div className=\"homecontainer\"  style={pagefade}>\r\n                \r\n                {/* <img src={MainImg} /> */}\r\n                <div className=\"home_copy-container\">\r\n                    {/* <h4 className=\"home_title_mini\">TELL YOUR</h4>\r\n                    <h1 className=\"home_title\">STORY</h1> */}\r\n                    <img src={CopyImg} alt=\"\"/>\r\n                </div>\r\n                \r\n                <div className=\"home_overlayBG\"></div>\r\n            </animated.div>)\r\n}\r\n\r\nexport default ContentContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nimport '../css/welcome.css';\r\nimport BBoard from '../images/bill-board2.png';\r\nimport PPoint from '../images/-point.png'\r\n\r\n\r\nconst Welcome = () => {\r\n const [siteTest , setSiteTest] = useState(true);\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n\r\n    }, [])\r\n\r\n    const pagefade = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            transition: '.5s',\r\n            backgroundColor: '#228d91'\r\n        },\r\n        to: {\r\n            opacity: 1\r\n        }\r\n    })\r\n\r\n\r\n    return( <animated.div className=\"contentcontainer\" style={pagefade}>\r\n        <div className=\"content-center\">\r\n            {/* <img src={Img1 }alt=\"featured\" className=\"img1\"/> */}\r\n            <div className=\"wel-top-space\"></div>\r\n\r\n\r\n            <div className=\"wel-right\">\r\n                <img src={BBoard} className=\"bboard\" alt=\"bill-board\" />\r\n                <img src={PPoint} className=\"ppoint\" alt=\"peoplepoint\" />\r\n            </div>\r\n\r\n            <div className=\"wel-left\">\r\n                <h1 className=\"welcome-title\">WEL<span>COME!</span></h1>\r\n                <h4>Let's <span>chat</span></h4>\r\n                <div style={{width: '100%', maxWidth: '700px', margin: '0 auto'}}>\r\n                    <p>This basically speaks about who I am and why I exist. Also how I benefit the business, and how I can change the business modle.....montes, nascetur ridiculus mus. Donec quam felis, quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet.</p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            \r\n            \r\n        </div>\r\n        \r\n            </animated.div>)\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nimport '../css/whatWeDo.css'\r\n\r\n\r\nimport ImgDSA from '../images/dsa.PNG';\r\nimport Img2 from '../images/img2.png';\r\nimport Img3 from '../images/img3.png';\r\nimport Site from '../images/site_.png';\r\n\r\n//GIFS\r\nimport Animation0 from '../images/animation_2-.gif';\r\nimport Animation1 from '../images/animation_1.gif';\r\nimport Animation2 from '../images/animation_2.gif';\r\nimport Animation3 from '../images/animation_3.gif';\r\nimport Animation4 from '../images/animation_4.gif';\r\nimport Animation5 from '../images/done.gif';\r\nimport Animation6 from '../images/animation_6.gif';\r\n\r\n\r\n\r\n\r\nconst WhatWeDo = () => {\r\n\r\n    const database = {\r\n                        animation: {copy: <div>\r\n                                            <p>When it comes to <strong>Animation</strong> we are no strangers... Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, quis, feugiat a, tellus. Phasellus viverra nulla ut </p>\r\n                                            <p>dis parturient montes, nascetur ridiculus mus. Donec quam felis, quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet.</p>\r\n                                          </div>, \r\n                                    tiles: [Animation0, Animation1, Animation2, Animation3,  Animation4, Animation5]\r\n                                },\r\n                        illustration: {copy: <div>\r\n                                                <p>When it comes to <strong>Motion Graphics</strong> we are no strangers... Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, quis, feugiat a, tellus. Phasellus viverra nulla ut </p>\r\n                                                <p>dis parturient montes, nascetur ridiculus mus. Donec quam felis, quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet.</p>\r\n                                              </div>,\r\n                                            tiles: [Img2, 0,  0,Img3, 0]\r\n                                        },\r\n                        webDevelopment: {copy: <div>\r\n                                                <p>When it comes to <strong>WEB DESIGN AND DEVELOPMENT</strong> we are no strangers... Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, quis, feugiat a, tellus. Phasellus viverra nulla ut </p>\r\n                                                <p>dis parturient montes, nascetur ridiculus mus. Donec quam felis, quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet.</p>\r\n                                              </div>,\r\n                                        tiles: [Site, Site, Site, Site]\r\n                                    }\r\n                    }\r\n\r\n\r\n\r\n    const [activeSkill , setActiveSkill] = useState( \"animation\");\r\n    const [activeTile , setActiveTile] = useState(0);\r\n    const [copy , setCopy] = useState( database.animation.copy);\r\n    const [tiles, setTiles] = useState(database.animation.tiles)\r\n    const [bgImg , setBgImg] = useState(database.animation.tiles[0]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n\r\n    }, [])\r\n\r\n let browserSize = window.innerWidth;\r\n\r\n\r\n\r\n    const pagefade = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            transition: '.5s'\r\n        },\r\n        to: {\r\n            opacity: 1\r\n        }\r\n    })\r\n\r\n\r\n\r\n    const WDToggle = () => {\r\n        setActiveSkill(\"web\")\r\n        setActiveTile(0)\r\n        setCopy(database.webDevelopment.copy)           \r\n        setTiles(database.webDevelopment.tiles)\r\n        setBgImg(database.webDevelopment.tiles[0])\r\n    }\r\n\r\n    const IToggle = () => {\r\n        setActiveSkill(\"illustration\")\r\n        setActiveTile(0)\r\n        setCopy(database.illustration.copy)\r\n        setTiles(database.illustration.tiles)\r\n        setBgImg(database.illustration.tiles[0])\r\n    }\r\n\r\n    const AToggle = () => {\r\n        setActiveSkill(\"animation\")\r\n        setActiveTile(0)\r\n        setCopy(database.animation.copy)\r\n        setTiles(database.animation.tiles)\r\n        setBgImg(database.animation.tiles[0])\r\n    }\r\n\r\n\r\n\r\n\r\n    //I need a function that changes the active tile.\r\n    const tileActivate = (num) => {\r\n        \r\n        console.log(num)\r\n\r\n        setActiveTile(num)\r\n    }\r\n\r\n\r\n\r\n    return( <animated.div className=\"contentcontainer\" style={pagefade}>\r\n                <div className=\"content-center\">\r\n                    <div className=\"content-center-inner\">\r\n\r\n                    \r\n\r\n                    <div className=\"content-center-left\">\r\n                            <h1 className=\"whatWeDo-title\">What We Do</h1>\r\n                            <ul className=\"WWD_nav\">\r\n                                <li onClick={AToggle} style={activeSkill === \"animation\" ? {color:\"#228d91\"}: {color:\"#1e1e1e\"}}>Animation</li>|\r\n                                <li onClick={IToggle} style={activeSkill === \"illustration\" ? {color:\"#228d91\"}: {color:\"#1e1e1e\"}}>Illustration</li>|\r\n                                <li onClick={WDToggle} style={activeSkill === \"web\" ? {color:\"#228d91\"}: {color:\"#1e1e1e\"}}>Web Development</li>\r\n                                {/* <li onClick={()=>{console.log(database.animation.copy)}}>Test</li> */}\r\n                            </ul>\r\n\r\n\r\n                            <div className=\"whatWeDo-copy-container\">\r\n                                {copy}\r\n                                {tiles.map((tile, i) =>{\r\n                                    // console.log(`Current tile is ${tile}`)\r\n                                    let getNum = () => {\r\n                                        tileActivate(i)\r\n                                        setBgImg(tile)\r\n                                    }\r\n                                    return <div className=\"tile\" key={i} style={i === activeTile ? {border: '4px solid #228d91',\r\n                                                                                backgroundImage: `url(${tile})`,\r\n                                                                                backgroundSize: 'cover'}:{backgroundImage: `url(${tile})`,\r\n                                                                                                          backgroundSize: 'cover'}}\r\n                                            onClick={getNum}>\r\n                                            </div>\r\n                                })}\r\n                                \r\n                            </div> \r\n\r\n\r\n                        </div>\r\n\r\n                    \r\n\r\n                        <div className=\"content-center-right\">\r\n                            {tiles.map((img,i)=>{\r\n\r\n                               if(activeSkill === \"web\" && browserSize < 600){\r\n                                   console.log('web is true and less than 600 ');\r\n                                return <img src={img} alt=\"DAS\" key={i} style={i === activeTile?{\r\n                                    width: '100%',\r\n                                    position: 'absolute',\r\n                                    margin: '0',\r\n                                    left: '0',\r\n                                    top: '5vh',\r\n                                    opacity:\" 1\",\r\n                                    transform: 'scale(1)'\r\n                                }:{\r\n                                    width: '80%',\r\n                                    position: 'absolute',\r\n                                    margin: '0',\r\n                                    left: '0',\r\n                                    top: '15vh',\r\n                                    opacity: \"0\",\r\n                                    transform: 'scale(.5)'\r\n                                }}/>\r\n                               }\r\n                               else if(activeSkill === \"web\" && browserSize > 600){\r\n                                console.log('web is true andgreater than 600 ');\r\n                                return <img src={img} alt=\"DAS\" key={i} style={i === activeTile?{\r\n                                    width: '80%',\r\n                                    position: 'absolute',\r\n                                    margin: '0',\r\n                                    left: '5vw',\r\n                                    top: '10vh',\r\n                                    opacity:\" 1\",\r\n                                    transform: 'scale(1)'\r\n                                }:{\r\n                                    width: '100%',\r\n                                    position: 'absolute',\r\n                                    margin: '0',\r\n                                    left: '0',\r\n                                    top: '15vh',\r\n                                    opacity: \"0\",\r\n                                    transform: 'scale(.5)'\r\n                                }}/>\r\n                               }\r\n                               else{\r\n                                console.log('web is false');\r\n                                return <img src={img} alt=\"DAS\" key={i} style={i === activeTile?{\r\n                                    width: '100%',\r\n                                    position: 'absolute',\r\n                                    margin: '0',\r\n                                    right: '0',\r\n                                    opacity:\" 1\",\r\n                                    transform: 'scale(1)'\r\n                                }:{\r\n                                    width: '100%',\r\n                                    position: 'absolute',\r\n                                    margin: '0',\r\n                                    right: '0',\r\n                                    opacity: \"0\",\r\n                                    transform: 'scale(.5)'\r\n                                }}/>\r\n                               }\r\n\r\n                            })}\r\n                            {activeSkill === \"web\"?<button className=\"visit-site-btn\" src={'#'}>Visit Site</button>:null}\r\n                        </div>\r\n                        \r\n\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <button onClick={()=>{console.log(`Browser width is ${browserSize}`)}} style={{'position':'fixed','top':'0', \"zIndex\":'999'}}>Browser Width</button> */}\r\n                \r\n            </animated.div>)\r\n}\r\n\r\nexport default WhatWeDo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nimport '../css/portfolio.css';\r\nimport SiteImg from '../images/site_.png';\r\nimport TreeImg from '../images/tree_.png';\r\nimport VidPlaceholder from '../images/vid_placeholder.png';\r\n\r\n\r\n\r\nconst Portfolio = ({popUpToggle, showVideo}) => {\r\n    const [videos ,setVideos] = useState([<ReactPlayer  url=\"https://res.cloudinary.com/bburrows/video/upload/v1600741630/barryburrowsdesigns/logo_full_soundUpdate_wd7pqq.mp4\"\r\n                                                        style={{margin: 'auto 0 auto 0'}}\r\n                                                        width=\"100%\"\r\n                                                        height='100%'\r\n                                                        onClick={popUpToggle}\r\n                                                        controls/>,\r\n                                          <ReactPlayer url=\"https://res.cloudinary.com/bburrows/video/upload/v1600741630/barryburrowsdesigns/logo_full_soundUpdate_wd7pqq.mp4\"\r\n                                                        width=\"100%\"\r\n                                                        height='100%'\r\n                                                        controls\r\n                                                        onClick={popUpToggle}/>,0,0,0,0,0,0])\r\n    const [videosStyles ,setVideosStyles] = useState({\r\n                                                        display: \"inline-block\",\r\n                                                        position: 'relative',\r\n                                                        margin: \"10px\",\r\n                                                        border: '10px solid #1e1e1e',\r\n                                                        boxSizing: 'border-box',\r\n                                                        width: \"300px\",\r\n                                                        height: \"177.5px\",\r\n                                                        cursor: 'pointer'\r\n                                                    })\r\n    const [websites ,setWebsites] = useState([0,0,0])\r\n    const [websitesStyles ,setWebsitesStyles] = useState({\r\n                                                            width: '300px',\r\n                                                            margin: '10px',\r\n                                                            cursor: 'pointer'\r\n                                                        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n\r\n    }, [])\r\n\r\n\r\n    const pagefade = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            transition: '.5s'\r\n        },\r\n        to: {\r\n            opacity: 1\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const MovingLogoDisplay = videos.map((video, i) => {\r\n        return <img src={VidPlaceholder}\r\n                    alt=\"website\"\r\n                    style={videosStyles}\r\n                    onClick={()=>{return showVideo(video)}} key={i}/>\r\n    })\r\n    //For this, hide the controls then on click toggle the playing option.\r\n\r\n    const websiteDisplay = websites.map((site, i) => {\r\n        return <img src={SiteImg} alt=\"website\" style={websitesStyles} key={i}/>\r\n    })\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    return( <animated.div className=\"contentcontainer\" style={pagefade}>\r\n        \r\n                <div className=\"content-center\">\r\n                    \r\n                        <h1 className=\"portfolio-container-title\">Animated Logos</h1>\r\n                        <div className=\"portfolio-container\">\r\n                            {MovingLogoDisplay}\r\n                        </div>\r\n                        \r\n                        <h1 className=\"portfolio-container-title\">Web Development and Design</h1>\r\n                        <div className=\"portfolio-container\">\r\n                            {websiteDisplay} \r\n                        </div>\r\n\r\n                        <h1 className=\"portfolio-container-title\">Animation</h1>\r\n                        <div className=\"portfolio-container\">\r\n                            {websiteDisplay} \r\n                        </div>\r\n\r\n                        <h1 className=\"portfolio-container-title\">Illustrations</h1>\r\n                        <div className=\"portfolio-container\">\r\n                            {websiteDisplay} \r\n                        </div>\r\n                        \r\n                    \r\n                    \r\n                </div>\r\n                <img src={TreeImg} alt=\"\" style={{\r\n                                                    position: 'fixed',\r\n                                                    zIndex: '-10',\r\n                                                    right: '-50px',\r\n                                                    bottom: '0',\r\n                                                    opacity: '.1'\r\n                                                }}/>\r\n            </animated.div>)\r\n}\r\n\r\nexport default Portfolio;\r\n\r\n\r\n/*<ReactPlayer url=\"https://res.cloudinary.com/bburrows/video/upload/v1600741630/barryburrowsdesigns/logo_full_soundUpdate_wd7pqq.mp4\"\r\n                            style={videosStyles}\r\n                            width=\"300px\"\r\n                            height=\"177.5px\"\r\n                            onClick={popUpToggle}\r\n                            key={i}/>*/","import React, { useEffect } from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\n\r\nimport '../css/getConnect.css';\r\n\r\n\r\nimport Img0 from '../images/img0.png';\r\n\r\nconst GetConnected = () => {\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const pagefade = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            transition: '.5s'\r\n        },\r\n        to: {\r\n            opacity: 1\r\n        }\r\n    })\r\n\r\n    \r\n\r\n\r\n\r\n    return( <animated.div className=\"contentcontainer\" style={pagefade}>\r\n                <div className=\"content-center\">\r\n                    \r\n                    <div id=\"getConnect-container\">\r\n                    \r\n                        <h1>Have a project?</h1>\r\n                        <p>Interested in working on a project together? Just send me and email, stating what it is that you are expecting me to do. Then we can get started. It’s that simple...I want to start praying for sure. </p>\r\n                        <input className=\"input-email\" placeholder=\"email\"/>\r\n                        <input className=\"input-firstName\" placeholder=\"first name\"/>\r\n                        <input className=\"input-lastName\" placeholder=\"last name\"/>\r\n                        <textarea className=\"input-message\" placeholder=\"message...\"></textarea>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n                <img src={Img0} alt=\"\" className=\"emailImg\"/>\r\n            </animated.div>)\r\n}\r\n\r\nexport default GetConnected;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport \"../css/nav.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const [homeColor, setHomeColor] = useState({\r\n                                            color: '#ffffff'\r\n                                            })\r\n    const [welcome, setwelcome] = useState({\r\n                                                color: '#ffffff'\r\n                                                })\r\n    const [whatWeDoColor, setWhatWeDoColor] = useState({\r\n                                                color: '#ffffff'\r\n                                                })\r\n    const [portfolioColor, setPortfolioColor] = useState({\r\n                                                                color: '#ffffff'\r\n                                                                })\r\n    const [getConnectedColor, setGetConnectedColor] = useState({\r\n                                                                color: '#ffffff'\r\n                                                                })\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        hometrigged();\r\n    }, [])\r\n\r\n    const hometrigged = () => {\r\n        setHomeColor({\r\n            color: '#228d91 ',\r\n        })\r\n        setwelcome({\r\n            color: '#ffffff'\r\n            })\r\n        setWhatWeDoColor({\r\n            color: '#ffffff'\r\n            })\r\n        setPortfolioColor({\r\n            color: '#ffffff'\r\n            })\r\n        setGetConnectedColor({\r\n            color: '#ffffff'\r\n            })\r\n            console.log(\"BTN CLICKED\")\r\n    }\r\n\r\n\r\n    const welcometrigged = () => {\r\n        setHomeColor({\r\n            color: '#ffffff'\r\n        })\r\n        setwelcome({\r\n            color: '#228d91 ',\r\n            })\r\n        setWhatWeDoColor({\r\n            color: '#ffffff'\r\n            })\r\n        setPortfolioColor({\r\n            color: '#ffffff'\r\n            })\r\n        setGetConnectedColor({\r\n            color: '#ffffff'\r\n            })\r\n            console.log(\"BTN CLICKED\")\r\n    }\r\n\r\n\r\n    const whatWeDotrigged = () => {\r\n        setHomeColor({\r\n            color: '#ffffff'\r\n        })\r\n        setwelcome({\r\n            color: '#ffffff'\r\n            })\r\n        setWhatWeDoColor({\r\n            color: '#228d91 ',\r\n            })\r\n        setPortfolioColor({\r\n            color: '#ffffff'\r\n            })\r\n        setGetConnectedColor({\r\n            color: '#ffffff'\r\n            })\r\n            console.log(\"BTN CLICKED\")\r\n    }\r\n\r\n\r\n\r\n    const portfoliotrigged = () => {\r\n        setHomeColor({\r\n            color: '#ffffff'\r\n        })\r\n        setwelcome({\r\n            color: '#ffffff'\r\n            })\r\n        setWhatWeDoColor({\r\n            color: '#ffffff'\r\n            })\r\n        setPortfolioColor({\r\n            color: '#228d91 ',\r\n            })\r\n        setGetConnectedColor({\r\n            color: '#ffffff'\r\n            })\r\n            console.log(\"BTN CLICKED\")\r\n    }\r\n\r\n\r\n    const getConnecedtrigged = () => {\r\n        setHomeColor({\r\n            color: '#ffffff'\r\n        })\r\n        setwelcome({\r\n            color: '#ffffff'\r\n            })\r\n        setWhatWeDoColor({\r\n            color: '#ffffff'\r\n            })\r\n        setPortfolioColor({\r\n            color: '#ffffff'\r\n            })\r\n        setGetConnectedColor({\r\n            color: '#228d91 ',\r\n            })\r\n            console.log(\"BTN CLICKED\")\r\n    }\r\n\r\n\r\n\r\n    return( <div className=\"nav_container\">\r\n                <ul className=\"navLink\" style={{'margin':'0px'}}>\r\n                    <li onClick={hometrigged}><NavLink to='/hello' style={homeColor} >Home</NavLink></li>\r\n                    <li onClick={welcometrigged}><NavLink to='/welcome' style={welcome}>Welcome</NavLink></li>\r\n                    <li onClick={whatWeDotrigged}><NavLink to='/whatWeDo' style={whatWeDoColor}>What we do</NavLink></li>\r\n                    <li onClick={portfoliotrigged}><NavLink to='/portfolio' style={portfolioColor}>Portfolio</NavLink></li>\r\n                    <li onClick={getConnecedtrigged}><NavLink to='/getConnected' style={getConnectedColor}>Get Connected</NavLink></li>\r\n                </ul>\r\n            </div>)\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport '../css/popUpDefault.css';\r\n\r\n\r\nconst PopUpDefault = ({popUpToggle, popUpContent}) => {\r\n    return( <div id=\"popUpBG\">\r\n                <div id=\"popUpContainer\"> \r\n                    <div id=\"KillPopUpBtn\" onClick={popUpToggle}>x</div>\r\n                    {popUpContent}\r\n                </div> \r\n                \r\n            </div>) \r\n}\r\n\r\nexport default PopUpDefault;","import React, {useState} from 'react';\nimport Home from './components/home';\nimport Welcome from './components/welcome';\nimport WhatWeDo from './components/whatWeDo';\nimport Portfolio from './components/portfolio';\nimport GetConnected from './components/getConnected';\nimport Nav from './components/nav'\nimport ReactPlayer from 'react-player';\nimport {useSpring, animated} from 'react-spring';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport PopUpDefault from './components/popUpDefault';\n\n\nimport logoMain from './images/logo_.png';\nimport './displayFrame.css';\nimport './css/main.css';\n\n\n\n\n\nconst DisplayFrame = () => { \n\n  const [newView, setNewView] = useState(true);\n  const [videoIntro, setVideoIntro] = useState({\n                                          playing: true,\n                                        })\n  const [videoIntroStyle, setVideoIntroStyle] = useState({\n                                                  position: 'fixed',\n                                                  display: 'block',\n                                                  top: '0%',\n                                                  left: '0%',\n                                                  transition: '1s',\n                                                  zIndex: '95',\n                                                  width: '100vw',\n                                                  // height: '100%',\n                                                  objectFit: 'cover !important',\n                                                  objectPosition: 'center left',\n                                                })  \n  const [logoStyle, setLogoStyle] = useState({ \n                                              position: 'fixed',\n                                              opacity: '0',\n                                              maxWidth: '250px',\n                                              width: '10vw',\n                                              transition: '1s',\n                                              logoP: 'left'\n                                            });                                              \n  const [popUp, setPopUp] = useState(false);\n  const [popUpContent, setPopUpContent] =useState('Hi, Im the content');\n\n\n\n\n                                                \n  let fade = useSpring({\n    \n    from: {\n        opacity: newView ? 0: 1,\n        transition: '1.6s',\n    },\n    to: {\n      opacity: !newView ? 0: 1,\n    }\n  })\n\n\n  const pagefade = useSpring({\n    from: {\n        opacity: 0,\n        transition: '1.6s'\n    },\n    to: {\n        opacity: 1\n    }\n})\n\n \n  const popUpToggle = () => {\n    setPopUp(!popUp);\n    console.log(\"Popup was clicked\")\n  }\n\n  const showVideo = async (video) => {\n    await setPopUpContent(video);\n    await popUpToggle()\n  }\n\n\nconst logoToggle = async () => {\n  console.log(logoStyle.logoP )\n  if(logoStyle.logoP === 'left'){\n    setLogoStyle(prevState => ({\n      ...prevState,\n      left: '-150px',\n      logoP: 'right'\n  }))\n  \n  }\n  else{\n    await setLogoStyle(prevState => ({\n      ...prevState,\n      left: '0',\n      logoP: 'left'\n  }))\n  console.log('it wasn\"t left')\n  }\n  \n}\n\n\n\n\n\n\n\n  return (<div className=\"App\">\n    {popUp ? <PopUpDefault popUpToggle={popUpToggle}  popUpContent={popUpContent}/>: null}\n    <BrowserRouter >\n      <div className=\"border-top\">\n        <Nav style={{positon: 'fixed', top: '30vh'}}/>\n      </div>\n\n      <img src={logoMain} alt=\"logo main\" style={logoStyle} onClick={logoToggle}/>\n\n      <animated.div style={pagefade}>\n        <Switch>\n          <Route path='/whatWeDo' component={WhatWeDo}/>\n          <Route path='/portfolio' render={()=>{return(<Portfolio popUpToggle={popUpToggle} showVideo={showVideo}/>)}}/>\n          <Route path='/welcome' component={Welcome}/>\n          <Route path='/getConnected' component={GetConnected}/>\n          <Route path='/' component={Home}/>\n        </Switch>\n      </animated.div>\n      \n      <div className=\"border-bottom\">\n        <div  id=\"copyright\">\n          <p>© BarryBurrowsDesigns 2020</p>\n        </div>\n      </div>\n\n\n\n\n\n\n      <animated.div  style={fade}>\n        <video \n                      style={videoIntroStyle}\n                      playing ={videoIntro.playing}\n                      width={null}\n                      height={null}\n                      onEnded={() => { \n                        setNewView(!newView)\n                        setLogoStyle({\n                          opacity: '1',\n                          zIndex: '10',\n                          position: 'fixed',\n                          transition: '1s',\n                          maxWidth: '250px',\n                          width: '10vw',\n                        })\n                      }}\n                      onClick={ async () => { \n                        await setNewView(!newView) \n                        await setVideoIntro({playing: false})\n                        await setVideoIntroStyle({\n                          position: 'fixed',\n                          display: 'none',\n                          top: '0px',\n                          transition: '1s',\n                          zIndex: \"-500\"\n                        })\n                        await setLogoStyle({\n                          display: 'block',\n                          zIndex: '10',\n                          position: 'fixed',\n                          transition: '1s',\n                          maxWidth: '250px',\n                          width: '40vw',\n                        })\n                      }} \n          >\n          <source src=\"https://res.cloudinary.com/bburrows/video/upload/v1600741630/barryburrowsdesigns/logo_full_soundUpdate_wd7pqq.mp4\" type=\"video/mp4\"/>\n          </video>\n        </animated.div>\n        \n    </BrowserRouter>\n    </div>\n);\n}\n\nexport default DisplayFrame;\n\n\n\n//<ContentContainer style={{position: 'absolute'}}/>\n//\n/*\n        \n        \n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DisplayFrame from './displayFrame';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<DisplayFrame />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}